<textarea id="T" style="width: 300px; height: 300px;"></textarea>
<textarea id="T2" style="left: 312px; width: 300px; height: 300px; position: absolute"></textarea>
<textarea id="T3" style="top: 312px; left: 8px; width: 300px; height: 300px; position: absolute"></textarea> 
<textarea id="out" style="top: 312px; left: 312px; width: 300px; height: 300px; position: absolute"></textarea> 

<script>
var mutateCoef=0.5;

onload=function(){
FT=function(){if(T.value.length) rndsearch(T.value,mutateCoef,5000)}
t=setInterval(FT,100);
T3.value="F="+F.toString()+"\nH2=[0,1,0];\nH=0;\nLenA=2;";
T.value='fffff';
T.oninput();
}

function XXX(){
try {
eval(T3.value)+'\n';
} catch(e){ }
T2.value='x y z            ip\n'; var Ar=[];
Ar=b(T.value,[0,0,0]); T2.value+=Ar[0].join(' ')+' => '+Ar[1]+'   000'+'\n';
Ar=b(T.value,[1,0,0]); T2.value+=Ar[0].join(' ')+' => '+Ar[1]+'   001'+'\n';
Ar=b(T.value,[0,1,0]); T2.value+=Ar[0].join(' ')+' => '+Ar[1]+'   010'+'\n';
Ar=b(T.value,[1,1,0]); T2.value+=Ar[0].join(' ')+' => '+Ar[1]+'   011'+'\n';
Ar=b(T.value,[0,0,1]); T2.value+=Ar[0].join(' ')+' => '+Ar[1]+'   100'+'\n';
Ar=b(T.value,[1,0,1]); T2.value+=Ar[0].join(' ')+' => '+Ar[1]+'   101'+'\n';
Ar=b(T.value,[0,1,1]); T2.value+=Ar[0].join(' ')+' => '+Ar[1]+'   110'+'\n';
Ar=b(T.value,[1,1,1]); T2.value+=Ar[0].join(' ')+' => '+Ar[1]+'   111';
}

T.oninput=function(){
XXX(); out.value=''; G_=[];
}
T3.oninput=XXX;

h=function(st){
var S='';
for(var i=0;i<st.length;i++){
S+='('; 
S+=st[i][0]+' '; 
S+=st[i][1];
S+=') ';
}
return S
}

function rules(s){
var sum=0;
for(var i=0;i<s.length;i++){
if(s[i]=='[') sum++; else
if(s[i]==']') sum--;
if(sum<0) return false;
}
return !sum;
}

function toStr(x,o,L){
var S=x.toString(o);
while(S.length<L){S='0'+S}
return S;
}

function gperebor(strB,strE,L,buf,arN,lenprog,exp){
var I=0;
l=Math.pow(exp,lenprog);
for(var i=0;i<L;i++){
if (i>=l) return i+'';
var s=toStr(i,exp,lenprog), S='';
for(var j=0;j<s.length;j++)
switch(s[j]){
case '0': S='f'+S; break;
case '1': S='>'+S; break;
case '2': S='<'+S; break;
default: I=+s[j];
if (I>=3 && I<exp) S=(I-2)+S;
}
var program=preParse(strB+S+strE);
if(rules(program)){
var bool=true;
for(var k=0;k<arN.length;k++)
if(!u(program,buf,arN[k])) {bool=false; break}
if(bool) console.log(program);
}

}
return L;
}

function perebor(L,buf,maxn,lenprog,exp){
var I=0;
for(var i=0;i<L;i++){
var s=toStr(i,exp,lenprog), S='';
for(var j=0;j<s.length;j++){
switch(s[j]){
case '0': S='f'+S; break;
case '1': S='>'+S; break;
case '2': S='<'+S; break;
default: I=+s[j];
if (I>=3 && I<exp) S=(I-2)+S;
}
}
var program=preParse(S);
if(rules(program))
if(u(program,buf,maxn)) console.log(program);
}

}
//****************************************************************************************************************************************
function F(a){
var x=a[0], y=a[1], z=a[2];
a[1]=x&y;
return a;
}
/*
var x=0,o=1;
for(var i=3;i<6;i++) a[i]=0;
a[3]=1;

for(var i=0;i<3;i++){
if(a[i])x+=o; 
o*=2;
} 		
			x=(x+7)%8;
for(var i=0;i<3;i++){
a[i]=x%2;
x=Math.floor(x/2);
}
return a;

*/

// human increment: <f[>]f<[f<]>f помучаем единицу

// increment: [>]f<[f<]>

// decrement: f[>f]<[<]>

/////////////////////////////////////////
// переместить отрезок направо >[>]f[<]>f
/*
x+=2; [<f>[f]]>[>]f<[f<]<[f>f<]>
(x,y) => (or(x,y), y)
прямой   >[<]>[<]f
ip=>0    >>[>]f<[>]<<<

i=a[0], j=a[1], k=a[2];
a[0]=gfunc[4*i+2*j+k];
return a;
*/

var sys=2, LenA=3, n_max=1000, H=0, H2=[1,1,1], G_=[];
//****************************************************************************************************************************************
function rndsearch(program, mutate, L){
var A=G_;
for(var i=0; i<L; i++){
program=rndprog(program, mutate);
if(rules(program)) 
if(u(program,7,50) && u(program,8,50) && u(program,9,50)) {
var search=0;
for(var j=0;j<A.length;j++)
if(A[j]==program) {search=1; break}
if(!search) {A.push(program); out.value+=program+'\n'}
		}
	}
}

function rndprog(program, mutate){
var s='', rnd=Math.random, fl=Math.floor;
var BOOL=1, gs='',gss='',gsss='';
for(var i=0;i<program.length;i++){
BOOL=1; gs='',gss='',gsss='';
	while(BOOL)	{
BOOL=0;
var str='';
switch(program[i])
{
case 'f': str='0'; break;
case '>': str='1'; break;
case '<': str='2'; break;
case '[': str='3'; break;
case ']': str='4'; break;
default: str=program[i]; break;
}
if(rnd() < mutate) str=fl(rnd()*5);
str=str.toString();

switch(str)
{
case '0': str='f'; break;
case '1': str='>'; break;
case '2': str='<'; break;
case '3': str='['; break;
case '4': str=']'; break;
default: break;
}
if (i>=1) gs=s[i-1]+str;
if (i>=2) gss=s[i-2]+gs;
if (i>=3) gsss=s[i-3]+gss;
if (gs=='ff' || gs=='<>' || gs=='><' || gs=='[]' || gs==']]' || gs=='][') BOOL=1;
else if (i>=3) if(gsss=='f[f]' || gsss=='<f>f' ||  gsss=='>f<f' ||  gsss=='f<f>' ||  gsss=='f>f<') BOOL=1;


	}
s+=str;
}
return s
}

//****************************************************************************************************************************************


function metrics(){

}



//****************************************************************************************************************************************
u=function(s,buf,N){
var L=Math.pow(sys,LenA);
for(var i=0;i<L;i++){
var S=i.toString(sys);
while(S.length<LenA) S='0'+S;
while(S.length<buf) S=S+'0';
var U=[];
for(var k=0;k<buf;k++) U.push(parseInt(S[k]));

var A=B(s,U,buf,N);
var a=A[0], ip=A[1];

if (a==false) return false;
var C=F(U);
//console.log(C,ip);
//if (ip!=0 && ((i==0 && H[0]) || (i==1 && H[1]) || (i==2 && H[2]) || (i==3 && H[3])  ) ) return false;
if (H) if (ip!=0) return false;
if(a==undefined) return false;
for(var k=0; k<H2.length; k++) if(a[k]!=C[k] && H2[k]) return false;
}
return true;
}

B=function (s,init,buf,N){
var a=[], ip=0, n=0, st=[[1,1]];
for(var i=0;i<buf;i++) {a[i]=0}
for(var i=0;i<init.length;i++) a[i]=init[i];

isin=function(){return st[st.length-1][1]}

for(var i=0;i<s.length;i++){ n++; if(n>N) return false;
switch(s[i]){
case 'f': if(isin()){a[ip]++} break;
case '>': if(isin()){ip++} break;
case '<': if(isin()){ip--} break;
case '[': st.push([i,a[ip]]); break;
case ']': var x=st.pop(); 
if(a[ip]!=0 && x[1]){i=x[0]; st.push(x)} break;
}
if(ip<0) ip+=buf; else
if(ip>=buf) ip-=buf;
if(a[ip]==undefined) a[ip]=0;
a[ip]=a[ip]%sys;
} 
return [a,ip];
}

b=function (s,init){
var buf=7, n=0; //T2.value='';
var a=[], ip=0, st=[[1,1]];
for(var i=0;i<buf;i++) a[i]=0;
for(var i=0;i<init.length;i++) a[i]=init[i];

isin=function(){return st[st.length-1][1]}
toOut=function(s){ }
stspace=function(){for(var i=0; i<st.length; i++) toOut(' ')}

for(var i=0;i<s.length;i++){ n++; 
if(n>n_max) {
var Ns='n > '+n_max; 
while(Ns.length<2*buf-1) Ns=' '+Ns; 
return [[Ns],ip]}

switch(s[i]){
case 'f': if(isin()){a[ip]++; toOut(s[i])} break;
case '>': if(isin()){ip++; toOut(s[i])} break;
case '<': if(isin()){ip--;toOut(s[i])} break;
case '[': st.push([i,a[ip]]); 
if(a[ip]) {toOut('\n'); stspace(); toOut('['); toOut('\n'); stspace();} break;
case ']': var x=st.pop(); 
if(a[ip]!=0 && x[1]){i=x[0]; st.push(x)}

if(a[ip]) {toOut('],'+'\n'); stspace(); toOut('[');}
else  {toOut('\n'); stspace(); toOut('].'); stspace()}break;
}
if(ip<0) ip+=buf; else
if(ip>=buf) ip-=buf;

if(a[ip]==undefined) a[ip]=0;
a[ip]=a[ip]%sys;
} 
return [a,ip]
}

function preParse(s){
var S='', st=[];
isDigit=function(simbol){for(var i=1;i<10;i++) if(simbol==i) return true; return false}
for(var i=0;i<s.length;i++){
if(isDigit(s[i])) {S+='['; st.push(+s[i]+i)}
else S+=s[i];
var j=0;
while (i>=st[st.length-1]+j && st.length>0) {S+=']'; j++; st.pop()}
}
return S;
}

//T3.value='b='+b;
</script>